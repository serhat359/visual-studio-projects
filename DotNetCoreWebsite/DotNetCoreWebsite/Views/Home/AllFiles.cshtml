@model AllFilesModel

@{
    ViewData["Title"] = "All Files";
}

<h1>All Files</h1>

<table class="table table-hover table-bordered">
    <thead>
        <tr>
            <th>Icon</th>
            <th>File Name</th>
            <th>File Size</th>
            <th>Date</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
                @if (Model.BackFolderPath != null)
                {
                    <a href="?q=@WebUtility.UrlEncode(Model.BackFolderPath)"><i class="fa fa-arrow-left"></i></a>
                }
                else
                {
                    <i class="fa fa-arrow-left"></i>
                }
            </td>
            <td>
                @if (Model.BackFolderPath != null)
                {
                    <a href="?q=@WebUtility.UrlEncode(Model.BackFolderPath)">..</a>
                }
            </td>
            <td></td>
            <td></td>
            <td></td>
            <td><input type="checkbox" onchange="checkboxChange()" /></td>
        </tr>
        @foreach (var fileInfo in Model.FileList)
        {
            <tr class="default">
                <td>
                    @if (fileInfo.IsFolder)
                    {
                        <i class="fa fa-folder-open"></i>
                    }
                </td>
                <td>
                    @if (fileInfo.IsFolder)
                    {
                        <a href="?q=@WebUtility.UrlEncode(Model.CurrentPath + fileInfo.Name)">@fileInfo.Name</a>
                    }
                    else
                    {
                        @fileInfo.Name
                    }
                </td>
                <td>@fileInfo.FileSizeString</td>
                <td title="@fileInfo.AgeString">@fileInfo.ModifiedDateString</td>
                <td class="downloadLink">
                    @if (!fileInfo.IsFolder)
                    {
                        <a href="DownloadFile?q=@WebUtility.UrlEncode(Model.CurrentPath + fileInfo.Name)"><i class="fa fa-download"></i></a>
                    }
                </td>
                <td class="downloadCheckBox">
                    @if (!fileInfo.IsFolder)
                    {
                        <input type="checkbox" class="downloadCheckBoxInput" />
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<button id="downloadSelectedButton" class="btn btn-secondary" style="float:right; visibility: hidden" onclick="downloadSelected()">Download Selected</button>
<br /><br />

@section Scripts {
    <script type="text/javascript">
        var isSet = false;

        function checkboxChange() {
            var allCheckBoxes = document.querySelectorAll(".downloadCheckBox input[type=checkbox]");

            isSet = !isSet;
            for (var i = 0; i < allCheckBoxes.length; i++) {
                allCheckBoxes[i].checked = isSet;
            }
        }

        function downloadSelected() {
            var path = new URL(window.location.toString()).searchParams.get("q");
            var fileNames = [];
            var allSelectedCheckBoxes = document.querySelectorAll(".downloadCheckBox input[type=checkbox]:checked");

            for (var i = 0; i < allSelectedCheckBoxes.length; i++) {
                var link = allSelectedCheckBoxes[i].parentElement.parentElement.querySelector(".downloadLink a").href;
                var fileName = new URL(link).searchParams.get("q");

                if (path) {
                    fileName = fileName.replace(path + "/", "");
                }

                fileNames.push(fileName);
            }

            var params = fileNames.map(x => "q=" + encodeURIComponent(x));

            if (path)
                params.push("path=" + encodeURIComponent(path));

            window.location = "DownloadMultiFile?" + params.join("&");
        }

        $(document).ready(function () {
            $('.downloadCheckBoxInput').on("click", function (event) {
                $('#downloadSelectedButton').setVisible($('.downloadCheckBoxInput:checked').length > 0);
            })

            $('#downloadSelectedButton').setVisible(false);
        });
    </script>
}

<style>
    table.table-hover > tbody > tr:hover > td.downloadCheckBox > input[type=checkbox],
    table.table-hover > tbody > tr > td.downloadCheckBox > input[type=checkbox]:checked {
        display: block;
    }

    table.table-hover > tbody > tr > td.downloadCheckBox > input[type=checkbox] {
        display: none;
    }
</style>