<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorContainingXml" xml:space="preserve">
    <value>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;rss version="2.0"&gt;
	&lt;channel&gt;
		&lt;item&gt;
			&lt;title&gt;YGOTAS Episode 75 - Valley of the Duels&lt;/title&gt;
			&lt;link&gt;https://www.youtube.com/watch?v=YSAiv93D7jg&lt;/link&gt;
			&lt;description&gt;It's a good thing I played all that YouTubers Life. Special thanks to Krosecz for editing this episode! Check out Krosecz's channel at ...&lt;/description&gt;
			&lt;pubDate&gt;Tue, 20 Jun 2017 15:55:19 GMT&lt;/pubDate&gt;
		&lt;/item&gt;
		&lt;item&gt;
			&lt;title&gt;Episode 74 - Right In The Feels&lt;/title&gt;
			&lt;link&gt;https://www.youtube.com/watch?v=YvHVGoElDRI&lt;/link&gt;
			&lt;description&gt;Could it be my destiny to be King of Games? Special thanks to Krosecz for editing this episode! Check out Krosecz's channel at ...&lt;/description&gt;
			&lt;pubDate&gt;Mon, 17 Apr 2017 18:57:06 GMT&lt;/pubDate&gt;
		&lt;/item&gt;
		&lt;item&gt;
			&lt;title&gt;YGOTAS Episode 73 - Throw Haga From The Train&lt;/title&gt;
			&lt;link&gt;https://www.youtube.com/watch?v=BCftH2rDVzo&lt;/link&gt;
			&lt;description&gt;All aboard the Berserker Soul train. Special thanks to MasakoX for editing this episode! Check out his channel right here ...&lt;/description&gt;
			&lt;pubDate&gt;Wed, 15 Feb 2017 20:15:06 GMT&lt;/pubDate&gt;
		&lt;/item&gt;
		&lt;item&gt;
			&lt;title&gt;YGOTAS Episode 72 - Rex &amp; Weevil Do Atlantica&lt;/title&gt;
			&lt;link&gt;https://www.youtube.com/watch?v=2j7Xu_yf5VY&lt;/link&gt;
			&lt;description&gt;This episode is high in orichalcium. Special thanks to OneKids, Nowacking, and xJerry64x of Elite3 for editing this episode! Check out Pokemon 'Bridged by ...&lt;/description&gt;
			&lt;pubDate&gt;Wed, 21 Dec 2016 21:58:26 GMT&lt;/pubDate&gt;
		&lt;/item&gt;
		&lt;item&gt;
			&lt;title&gt;Episode 71 - The Break-Up&lt;/title&gt;
			&lt;link&gt;https://www.youtube.com/watch?v=ZVcy0V34DVY&lt;/link&gt;
			&lt;description&gt;Try out Crunchyroll for 30 Days (1 Month) FREE with http://www.crunchyroll.com/ygotas Get your anime here! Special thanks to Krosecz of ...&lt;/description&gt;
			&lt;pubDate&gt;Mon, 24 Oct 2016 21:36:01 GMT&lt;/pubDate&gt;
		&lt;/item&gt;
		&lt;item&gt;
			&lt;title&gt;YGOTAS Episode 70 - A Convenient Truth&lt;/title&gt;
			&lt;link&gt;https://www.youtube.com/watch?v=9q0-v3ouvaw&lt;/link&gt;
			&lt;description&gt;Suggest better names for Rebecca's horse in the comments. Special thanks to MasakoX for editing this baby! ALSO STARRING: Erika Harlacher as Rebecca ...&lt;/description&gt;
			&lt;pubDate&gt;Fri, 19 Aug 2016 19:07:14 GMT&lt;/pubDate&gt;
		&lt;/item&gt;
		&lt;item&gt;
			&lt;title&gt;YGOTAS Episode 69 - Age/Sex/Life Points&lt;/title&gt;
			&lt;link&gt;https://www.youtube.com/watch?v=IoTPbIZr7ck&lt;/link&gt;
			&lt;description&gt;star chips or gtfo Come see us at Anime Expo! We'll be set up next to TeamFourStar at one of the Shark Robot booth! ALSO STARRING: BoobsMcBalrog as Mai ...&lt;/description&gt;
			&lt;pubDate&gt;Tue, 28 Jun 2016 22:33:49 GMT&lt;/pubDate&gt;
		&lt;/item&gt;
		&lt;item&gt;
			&lt;title&gt;YGOTAS Episode 68 - Mad Mai&lt;/title&gt;
			&lt;link&gt;https://www.youtube.com/watch?v=_GSMMt-MXqc&lt;/link&gt;
			&lt;description&gt;Do not, my friends, become addicted to the new episode. It will take hold of you, and you will resent its absence! ALSO STARRING: BoobsMcBalrog as Mai ...&lt;/description&gt;
			&lt;pubDate&gt;Sat, 23 Apr 2016 18:41:59 GMT&lt;/pubDate&gt;
		&lt;/item&gt;
		&lt;item&gt;
			&lt;title&gt;YGOTAS Episode 67 - Toon Pangs&lt;/title&gt;
			&lt;link&gt;https://www.youtube.com/watch?v=Wr13DYngSqE&lt;/link&gt;
			&lt;description&gt;Don't give no matches to Mikey. ALSO STARRING: blackrose1m as Mikey Nowacking as Dark Magician Girl Special thanks to Ezekieru and 1KidsEntertainment ...&lt;/description&gt;
			&lt;pubDate&gt;Tue, 23 Feb 2016 19:30:00 GMT&lt;/pubDate&gt;
		&lt;/item&gt;
		&lt;item&gt;
			&lt;title&gt;YGOTAS Episode 66 - United Sucks&lt;/title&gt;
			&lt;link&gt;https://www.youtube.com/watch?v=q1dtzDUgYtg&lt;/link&gt;
			&lt;description&gt;Smells like good ideas. Edited by 1KidsEntertainment ALSO STARRING- Takahata101 as Dartz BoobsMcBalrog as ??????? Don't forget we got a patreon: ...&lt;/description&gt;
			&lt;pubDate&gt;Wed, 16 Dec 2015 20:00:01 GMT&lt;/pubDate&gt;
		&lt;/item&gt;
	&lt;/channel&gt;
&lt;/rss&gt;</value>
  </data>
  <data name="NewPattern" xml:space="preserve">
    <value>return ExecuteToList&lt;{1}&gt;("{0}", container.ToList());</value>
  </data>
  <data name="Pattern" xml:space="preserve">
    <value>DataTable table = ExecuteToTable\("(?&lt;spname&gt;\w+)", container.ToList\(\)\);

return MapAll&lt;(?&lt;classname&gt;\w+)&gt;\(table\);</value>
  </data>
  <data name="Statement1" xml:space="preserve">
    <value>// comment

DataTable table = ExecuteToTable("Brand_Select", container.ToList());

return MapAll&lt;Brand&gt;(table);

// comment

DataTable table = ExecuteToTable("Other_StoredProcedure", container.ToList());

return MapAll&lt;OtherClass&gt;(table);</value>
  </data>
</root>